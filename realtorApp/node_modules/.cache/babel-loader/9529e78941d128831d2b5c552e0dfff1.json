{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\web11\\\\Desktop\\\\Realtor-Client\\\\realtorApp\\\\src\\\\componentsInUse\\\\gallery\\\\gallery.jsx\";\nimport React from 'react';\nimport BuildApartment from \"./buildApartment\";\nimport Form from \"../forms/form\";\nimport { getFilterApartments } from '../../data/getData/getApartments';\nimport { getCountriesByCountry } from '../../data/getData/getCitiesByCountry';\n\nclass Gallery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      e.preventDefault();\n      let _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      this.setState({\n        [name]: value.toLowerCase()\n      }, () => {\n        this.createQuery();\n      });\n    };\n\n    this.handlecitySuccess = data => {\n      this.setState({\n        city: data\n      });\n    };\n\n    this.handlefilterSuccess = data => {\n      this.setState({\n        apartmentArray: data\n      });\n    };\n\n    this.state = {\n      apartmentArray: this.props.apartmentArray,\n      city: '',\n      price: '',\n      country: '',\n      address: '',\n      number_of_bath: '',\n      number_of_room: '',\n      listingStatus: ''\n    };\n  }\n\n  createQuery() {\n    const _this$state = this.state,\n          country = _this$state.country,\n          city = _this$state.city,\n          price = _this$state.price,\n          number_of_bath = _this$state.number_of_bath,\n          number_of_room = _this$state.number_of_room,\n          listingStatus = _this$state.listingStatus;\n    let query = '?';\n\n    if (country) {\n      query += `country=${country}&`;\n      getCountriesByCountry();\n    }\n\n    if (city) {\n      query += `city=${city}&`;\n    }\n\n    if (price) {\n      query += `price=${price}&`;\n    }\n\n    if (number_of_bath) {\n      query += `number_of_bath=${number_of_bath}&`;\n    }\n\n    if (number_of_room) {\n      query += `number_of_room=${number_of_room}&`;\n    }\n\n    if (listingStatus) {\n      query += `listingStatus=${listingStatus}&`;\n    }\n\n    this.filterApartment(query);\n  }\n\n  filterApartment(query) {\n    getFilterApartments(this.handlefilterSuccess, query);\n  }\n\n  render() {\n    console.log(\"country\", this.state.country);\n    return React.createElement(\"div\", {\n      className: \"row justify-content-between wrap-img-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Form, {\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), this.state.apartmentArray.length !== 0 && React.createElement(\"p\", {\n      style: {\n        marginLeft: \"20px\",\n        width: \"-webkit-fill-available\",\n        color: \"gray\",\n        fontSize: \"14px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.apartmentArray.length, \" Homes\"), this.state.apartmentArray.map((apartment, i) => React.createElement(BuildApartment, Object.assign({}, apartment, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Gallery;","map":{"version":3,"sources":["C:/Users/web11/Desktop/Realtor-Client/realtorApp/src/componentsInUse/gallery/gallery.jsx"],"names":["React","BuildApartment","Form","getFilterApartments","getCountriesByCountry","Gallery","Component","constructor","props","handleChange","e","preventDefault","target","name","value","setState","toLowerCase","createQuery","handlecitySuccess","data","city","handlefilterSuccess","apartmentArray","state","price","country","address","number_of_bath","number_of_room","listingStatus","query","filterApartment","render","console","log","length","marginLeft","width","color","fontSize","map","apartment","i"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport BuildApartment from \"./buildApartment\";\r\nimport Form from \"../forms/form\";\r\nimport {getFilterApartments} from '../../data/getData/getApartments'\r\nimport {getCountriesByCountry} from '../../data/getData/getCitiesByCountry'\r\n\r\nclass Gallery extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            apartmentArray: this.props.apartmentArray,\r\n            city: '',\r\n            price: '',\r\n            country: '',\r\n            address: '',\r\n            number_of_bath: '',\r\n            number_of_room: '',\r\n            listingStatus: '',\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        let {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value.toLowerCase(),\r\n        }, () => {\r\n            this.createQuery();\r\n        });\r\n    };\r\n\r\n    createQuery() {\r\n        const {country, city, price, number_of_bath, number_of_room, listingStatus} = this.state;\r\n        let query = '?';\r\n        if (country) {\r\n            query += `country=${country}&`\r\n            getCountriesByCountry()\r\n        }\r\n        if (city) {\r\n            \r\n            query += `city=${city}&` \r\n        }\r\n        if (price) {\r\n            query += `price=${price}&` \r\n        }\r\n        if (number_of_bath) {\r\n            query += `number_of_bath=${number_of_bath}&` \r\n        }\r\n        if (number_of_room) {\r\n            query += `number_of_room=${number_of_room}&` \r\n        }\r\n        if (listingStatus) {\r\n            query += `listingStatus=${listingStatus}&` \r\n        }\r\n        this.filterApartment(query);\r\n    };\r\n\r\n    filterApartment(query){\r\n        getFilterApartments(this.handlefilterSuccess, query)\r\n    }\r\n\r\n    handlecitySuccess = (data) =>{\r\n        this.setState({ \r\n            city: data,\r\n        });\r\n    }\r\n\r\n    handlefilterSuccess = (data) =>{\r\n        this.setState({ \r\n            apartmentArray: data,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(\"country\", this.state.country)\r\n        return (\r\n            <div className={\"row justify-content-between wrap-img-div\"}>\r\n                <Form handleChange={this.handleChange}/>\r\n                {this.state.apartmentArray.length !== 0 &&\r\n                        <p style={{marginLeft:\"20px\",width:\"-webkit-fill-available\",color: \"gray\",fontSize: \"14px\"}}>{this.state.apartmentArray.length} Homes</p>}\r\n                {this.state.apartmentArray.map((apartment, i) =>\r\n                    <BuildApartment {...apartment} key={i}/>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Gallery;\r\n"]},"metadata":{},"sourceType":"module"}