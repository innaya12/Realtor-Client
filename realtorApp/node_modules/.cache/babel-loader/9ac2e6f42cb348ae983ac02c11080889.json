{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\web11\\\\Desktop\\\\Realtor-Client\\\\realtorApp\\\\src\\\\componentsInUse\\\\gallery\\\\gallery.jsx\";\nimport React from 'react';\nimport BuildApartment from \"./buildApartment\";\nimport Filter from \"../forms/filter\";\nimport { getFilterApartments, getApartments } from '../../data/apartments';\nimport { getCitiesByCountry } from '../../data/citiesByCountry';\nimport './style/gallery.css';\n\nclass Gallery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      e.preventDefault();\n      let _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      if (name === \"country\") {\n        this.filterCity(value);\n      } else {\n        // console.log(\"name\", name)\n        // console.log(\"value\", value)\n        this.setState({\n          [name]: value\n        }, () => {\n          this.createQuery();\n        });\n      }\n    };\n\n    this.state = {\n      apartmentArray: this.props.apartmentArray,\n      user: null,\n      cities: [],\n      city: '',\n      price: '',\n      country: '',\n      address: '',\n      number_of_bath: '',\n      number_of_room: '',\n      listingStatus: ''\n    };\n  }\n\n  reset() {\n    this.setState({\n      apartmentArray: this.props.apartmentArray\n    });\n  }\n\n  createQuery() {\n    const _this$state = this.state,\n          city = _this$state.city,\n          price = _this$state.price,\n          number_of_bath = _this$state.number_of_bath,\n          number_of_room = _this$state.number_of_room,\n          listingStatus = _this$state.listingStatus;\n    let query = '?';\n\n    if (city) {\n      if (city.length !== 0) {\n        query += `city_id=${city}&`;\n      }\n    }\n\n    if (price) {\n      let min_price = price.substr(0, this.state.price.indexOf('-'));\n      let max_price = price.substr(1 + this.state.price.indexOf('-'));\n      query += `min_price=${min_price}&`;\n      query += `max_price=${max_price}&`;\n    }\n\n    if (number_of_bath) {\n      query += `number_of_bath=${number_of_bath}&`;\n    }\n\n    if (number_of_room) {\n      query += `number_of_room=${number_of_room}&`;\n    }\n\n    if (listingStatus) {\n      query += `sale_status=${listingStatus}&`;\n    }\n\n    this.filterApartment(query);\n  }\n\n  async filterCity(id) {\n    try {\n      const cities = await getCitiesByCountry(id);\n      this.setState({\n        cities\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async filterApartment(query) {\n    try {\n      const apartmentArray = await getFilterApartments(query);\n      this.setState({\n        apartmentArray\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row justify-content-between wrap-img-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      handleChange: this.handleChange,\n      reset: this.reset,\n      cities: this.state.cities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), this.state.apartmentArray.length !== 0 && this.state.apartmentArray.length > 1 && React.createElement(\"p\", {\n      style: {\n        marginLeft: \"20px\",\n        width: \"-webkit-fill-available\",\n        color: \"gray\",\n        fontSize: \"14px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Currnetly apartments are only available in Israel\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), this.state.apartmentArray.length, \" Homes\"), this.state.apartmentArray.length === 1 && React.createElement(\"p\", {\n      style: {\n        marginLeft: \"20px\",\n        width: \"-webkit-fill-available\",\n        color: \"gray\",\n        fontSize: \"14px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Currnetly apartments are only available in Israel\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), this.state.apartmentArray.length, \" Home\"), this.state.apartmentArray.map((apartment, i) => React.createElement(BuildApartment, Object.assign({}, apartment, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Gallery;","map":{"version":3,"sources":["C:/Users/web11/Desktop/Realtor-Client/realtorApp/src/componentsInUse/gallery/gallery.jsx"],"names":["React","BuildApartment","Filter","getFilterApartments","getApartments","getCitiesByCountry","Gallery","Component","constructor","props","handleChange","e","preventDefault","target","name","value","filterCity","setState","createQuery","state","apartmentArray","user","cities","city","price","country","address","number_of_bath","number_of_room","listingStatus","reset","query","length","min_price","substr","indexOf","max_price","filterApartment","id","error","console","log","render","marginLeft","width","color","fontSize","map","apartment","i"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport BuildApartment from \"./buildApartment\";\r\nimport Filter from \"../forms/filter\";\r\nimport {getFilterApartments, getApartments} from '../../data/apartments'\r\nimport {getCitiesByCountry} from '../../data/citiesByCountry'\r\nimport './style/gallery.css'\r\n\r\nclass Gallery extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            apartmentArray: this.props.apartmentArray,\r\n            user: null,\r\n            cities: [],\r\n            city: '',\r\n            price: '',\r\n            country: '',\r\n            address: '',\r\n            number_of_bath: '',\r\n            number_of_room: '',\r\n            listingStatus: '',\r\n        };\r\n    }\r\n\r\n    reset(){\r\n        this.setState({\r\n            apartmentArray: this.props.apartmentArray\r\n        })\r\n\r\n    }\r\n\r\n    createQuery() {\r\n        const {city, price, number_of_bath, number_of_room, listingStatus} = this.state;\r\n        let query = '?';\r\n        if (city){\r\n            if(city.length !== 0){\r\n                query += `city_id=${city}&` \r\n            }\r\n        }\r\n        if (price) {\r\n            let min_price = price.substr(0, this.state.price.indexOf('-'))\r\n            let max_price = price.substr(1 + this.state.price.indexOf('-'))\r\n            query += `min_price=${min_price}&` \r\n            query += `max_price=${max_price}&` \r\n        }\r\n        if (number_of_bath) {\r\n            query += `number_of_bath=${number_of_bath}&` \r\n        }\r\n        if (number_of_room) {\r\n            query += `number_of_room=${number_of_room}&` \r\n        }\r\n        if (listingStatus) {\r\n            query += `sale_status=${listingStatus}&` \r\n        }\r\n        this.filterApartment(query);\r\n    };\r\n\r\n    async filterCity(id){\r\n        try{\r\n            const cities = await getCitiesByCountry(id)\r\n            this.setState({\r\n                cities\r\n            });\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    async filterApartment(query){\r\n        try {\r\n            const apartmentArray = await getFilterApartments(query);\r\n            this.setState({ \r\n                apartmentArray\r\n            });\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        let {name, value} = e.target;\r\n        if(name === \"country\"){         \r\n            this.filterCity(value);\r\n        } else {\r\n            // console.log(\"name\", name)\r\n            // console.log(\"value\", value)\r\n            this.setState({\r\n                [name]: value,\r\n            }, () => {\r\n                this.createQuery();\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={\"row justify-content-between wrap-img-div\"}>\r\n                <Filter handleChange={this.handleChange}\r\n                        reset={this.reset}\r\n                        cities={this.state.cities}/>\r\n\r\n                {this.state.apartmentArray.length !== 0 && this.state.apartmentArray.length > 1 &&\r\n                        <p style={{marginLeft:\"20px\",width:\"-webkit-fill-available\",color: \"gray\",fontSize: \"14px\"}}>\r\n                            Currnetly apartments are only available in Israel \r\n                            <br/>{this.state.apartmentArray.length} Homes</p>}\r\n                {this.state.apartmentArray.length === 1 &&\r\n                        <p style={{marginLeft:\"20px\",width:\"-webkit-fill-available\",color: \"gray\",fontSize: \"14px\"}}>\r\n                            Currnetly apartments are only available in Israel \r\n                            <br/>{this.state.apartmentArray.length} Home</p>}\r\n                {this.state.apartmentArray.map((apartment, i) =>\r\n                    <BuildApartment {...apartment} key={i}/>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Gallery;\r\n"]},"metadata":{},"sourceType":"module"}