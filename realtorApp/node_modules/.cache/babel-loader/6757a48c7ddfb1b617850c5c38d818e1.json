{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\web11\\\\Desktop\\\\Realtor-Client\\\\realtorApp\\\\src\\\\componentsInUse\\\\gallery\\\\gallery.jsx\";\nimport React from 'react';\nimport BuildApartment from \"./buildApartment\";\nimport Form from \"../forms/form\";\n\nclass Gallery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      e.preventDefault();\n      let _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      this.setState({\n        [name]: value.toLowerCase()\n      }, () => {\n        this.createQuery();\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n    };\n\n    this.state = {\n      apartmentArray: this.props.apartmentArray,\n      city: '',\n      price: '',\n      address: '',\n      number_of_baths: '',\n      number_of_rooms: '',\n      listingStatus: ''\n    };\n  } // searchApartmentByCity = () => {\n  //     let newArray = this.state.arrayCity;\n  //     if (this.state.city) {\n  //         newArray = newArray.filter(city => city[\"label\"].toLowerCase().includes(this.state.city));\n  //         console.log(\"list\", newArray);\n  //     }\n  //     this.setState({apartmentArray: newArray});\n  // };\n\n\n  createQuery() {\n    const _this$state = this.state,\n          address = _this$state.address,\n          price = _this$state.price,\n          number_of_beds = _this$state.number_of_beds,\n          number_of_rooms = _this$state.number_of_rooms,\n          listingStatus = _this$state.listingStatus;\n    let newList = this.state.apartmentArray;\n\n    if (address) {\n      console.log(address);\n      newList = newList.filter(apartment => apartment[\"address\"].toLowerCase().includes(address));\n      console.log(\"list\", newList);\n    }\n\n    if (price) {\n      let priceMin = parseInt(price.slice(0, price.indexOf('-')));\n      let priceMax = parseInt(price.slice(price.indexOf('-') + 1));\n      newList = newList.filter(apartment => priceMax >= apartment[\"price\"] && priceMin < apartment[\"price\"]);\n    }\n\n    if (number_of_beds) {\n      newList = newList.filter(apartment => apartment[\"number_of_beds\"] === parseInt(number_of_beds));\n    }\n\n    if (number_of_rooms) {\n      newList = newList.filter(apartment => apartment[\"number_of_rooms\"] === parseInt(number_of_rooms));\n    }\n\n    if (listingStatus) {\n      newList = newList.filter(apartment => apartment[listingStatus] === true);\n    }\n\n    this.setState({\n      apartmentArray: newList\n    });\n  }\n\n  render() {\n    console.log(\"this.state.number_of_baths\", this.state.number_of_baths);\n    return React.createElement(\"div\", {\n      className: \"row justify-content-between wrap-img-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), this.state.apartmentArray.map((apartment, i) => React.createElement(BuildApartment, Object.assign({}, apartment, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Gallery;","map":{"version":3,"sources":["C:/Users/web11/Desktop/Realtor-Client/realtorApp/src/componentsInUse/gallery/gallery.jsx"],"names":["React","BuildApartment","Form","Gallery","Component","constructor","props","handleChange","e","preventDefault","target","name","value","setState","toLowerCase","createQuery","onSubmit","state","apartmentArray","city","price","address","number_of_baths","number_of_rooms","listingStatus","number_of_beds","newList","console","log","filter","apartment","includes","priceMin","parseInt","slice","indexOf","priceMax","render","map","i"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport BuildApartment from \"./buildApartment\";\r\nimport Form from \"../forms/form\";\r\n\r\nclass Gallery extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            apartmentArray: this.props.apartmentArray,\r\n            city: '',\r\n            price: '',\r\n            address: '',\r\n            number_of_baths: '',\r\n            number_of_rooms: '',\r\n            listingStatus: ''\r\n        };\r\n    }\r\n\r\n    // searchApartmentByCity = () => {\r\n    //     let newArray = this.state.arrayCity;\r\n    //     if (this.state.city) {\r\n    //         newArray = newArray.filter(city => city[\"label\"].toLowerCase().includes(this.state.city));\r\n    //         console.log(\"list\", newArray);\r\n    //     }\r\n    //     this.setState({apartmentArray: newArray});\r\n    // };\r\n\r\n    createQuery() {\r\n        const {address, price, number_of_beds, number_of_rooms, listingStatus} = this.state;\r\n        let newList = this.state.apartmentArray;\r\n        if (address) {\r\n            console.log(address);\r\n            newList = newList.filter(apartment => apartment[\"address\"].toLowerCase().includes(address));\r\n            console.log(\"list\", newList);\r\n        }\r\n        if (price) {\r\n            let priceMin = parseInt(price.slice(0, price.indexOf('-')));\r\n            let priceMax = parseInt(price.slice(price.indexOf('-') + 1));\r\n            newList = newList.filter(apartment => priceMax >= apartment[\"price\"] && priceMin < apartment[\"price\"]);\r\n        }\r\n        if (number_of_beds) {\r\n            newList = newList.filter(apartment => (apartment[\"number_of_beds\"] === parseInt(number_of_beds)));\r\n        }\r\n        if (number_of_rooms) {\r\n            newList = newList.filter(apartment => (apartment[\"number_of_rooms\"] === parseInt(number_of_rooms)));\r\n        }\r\n        if (listingStatus) {\r\n            newList = newList.filter(apartment => (apartment[listingStatus] === true));\r\n        }\r\n        this.setState({apartmentArray: newList});\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        let {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value.toLowerCase(),\r\n        }, () => {\r\n            this.createQuery();\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    render() {\r\n        console.log(\"this.state.number_of_baths\", this.state.number_of_baths)\r\n        return (\r\n            <div className={\"row justify-content-between wrap-img-div\"}>\r\n                <Form onSubmit={this.onSubmit}\r\n                      handleChange={this.handleChange}\r\n                />\r\n                {this.state.apartmentArray.map((apartment, i) =>\r\n                    <BuildApartment {...apartment} key={i}/>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Gallery;\r\n"]},"metadata":{},"sourceType":"module"}